# DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.


class Google_shoppingService:
    def __init__(self, client):
        self.client = client

    def google_shopping_access_data_delete(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for DELETE /google-shopping/access-data
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/access-data"
        return self.client.delete(uri, None, headers, query_params, content_type)

    def google_shopping_access_data_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /google-shopping/access-data
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/access-data"
        return self.client.get(uri, None, headers, query_params, content_type)

    def google_shopping_access_data_post(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for POST /google-shopping/access-data
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/access-data"
        return self.client.post(uri, data, headers, query_params, content_type)

    def google_shopping_access_data_put(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for PUT /google-shopping/access-data
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/access-data"
        return self.client.put(uri, data, headers, query_params, content_type)

    def google_shopping_productspublish_post(
            self,
            data,
            headers=None,
            query_params=None,
            content_type="application/json"):
        """
        It is method for POST /google-shopping/products/publish
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products/publish"
        return self.client.post(uri, data, headers, query_params, content_type)

    def google_shopping_productsidpublish_post(
            self,
            data,
            id,
            headers=None,
            query_params=None,
            content_type="application/json"):
        """
        It is method for POST /google-shopping/products/{id}/publish
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products/" + id + "/publish"
        return self.client.post(uri, data, headers, query_params, content_type)

    def google_shopping_productsidunpublish_post(
            self,
            data,
            id,
            headers=None,
            query_params=None,
            content_type="application/json"):
        """
        It is method for POST /google-shopping/products/{id}/unpublish
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products/" + id + "/unpublish"
        return self.client.post(uri, data, headers, query_params, content_type)

    def google_shopping_productsid_delete(self, id, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for DELETE /google-shopping/products/{id}
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products/" + id
        return self.client.delete(uri, None, headers, query_params, content_type)

    def google_shopping_productsid_get(self, id, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /google-shopping/products/{id}
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products/" + id
        return self.client.get(uri, None, headers, query_params, content_type)

    def google_shopping_productsid_put(
            self,
            data,
            id,
            headers=None,
            query_params=None,
            content_type="application/json"):
        """
        It is method for PUT /google-shopping/products/{id}
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products/" + id
        return self.client.put(uri, data, headers, query_params, content_type)

    def google_shopping_products_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /google-shopping/products
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products"
        return self.client.get(uri, None, headers, query_params, content_type)

    def google_shopping_products_post(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for POST /google-shopping/products
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/products"
        return self.client.post(uri, data, headers, query_params, content_type)

    def google_shopping_site_verification_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /google-shopping/site-verification
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/google-shopping/site-verification"
        return self.client.get(uri, None, headers, query_params, content_type)

    def google_shopping_taxonomy_get(self, locale, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /google-shopping/taxonomy
        """
        if query_params is None:
            query_params = {}

        query_params['locale'] = locale

        uri = self.client.base_url + "/google-shopping/taxonomy"
        return self.client.get(uri, None, headers, query_params, content_type)
