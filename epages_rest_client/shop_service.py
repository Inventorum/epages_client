# DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.


class ShopService:
    def __init__(self, client):
        self.client = client

    def shop_address_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop/address
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/address"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_address_patch(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for PATCH /shop/address
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/address"
        return self.client.patch(uri, data, headers, query_params, content_type)

    def shop_attributessecond_unknown_attribute_name_delete(
            self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for DELETE /shop/attributes/second-unknown-attribute-name
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/attributes/second-unknown-attribute-name"
        return self.client.delete(uri, None, headers, query_params, content_type)

    def shop_attributessecond_unknown_attribute_name_get(
            self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop/attributes/second-unknown-attribute-name
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/attributes/second-unknown-attribute-name"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_attributessecond_unknown_attribute_name_put(
            self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for PUT /shop/attributes/second-unknown-attribute-name
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/attributes/second-unknown-attribute-name"
        return self.client.put(uri, data, headers, query_params, content_type)

    def shop_attributes_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop/attributes
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/attributes"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_attributes_post(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for POST /shop/attributes
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/attributes"
        return self.client.post(uri, data, headers, query_params, content_type)

    def shop_close_post(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for POST /shop/close
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/close"
        return self.client.post(uri, data, headers, query_params, content_type)

    def shop_featuresfeatureName_get(
            self,
            featureName,
            headers=None,
            query_params=None,
            content_type="application/json"):
        """
        It is method for GET /shop/features/{featureName}
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/features/" + featureName
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_features_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop/features
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/features"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_imagessearchfind_by_label_get(
            self,
            label,
            headers=None,
            query_params=None,
            content_type="application/json"):
        """
        It is method for GET /shop/images/search/find-by-label
        """
        if query_params is None:
            query_params = {}

        query_params['label'] = label

        uri = self.client.base_url + "/shop/images/search/find-by-label"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_imagesimageId_delete(self, imageId, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for DELETE /shop/images/{imageId}
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/images/" + imageId
        return self.client.delete(uri, None, headers, query_params, content_type)

    def shop_imagesimageId_get(self, imageId, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop/images/{imageId}
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/images/" + imageId
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_images_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop/images
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/images"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_images_post(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for POST /shop/images
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/images"
        return self.client.post(uri, data, headers, query_params, content_type)

    def shop_legal_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop/legal
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/legal"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_legal_patch(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for PATCH /shop/legal
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/legal"
        return self.client.patch(uri, data, headers, query_params, content_type)

    def shop_open_post(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for POST /shop/open
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop/open"
        return self.client.post(uri, data, headers, query_params, content_type)

    def shop_get(self, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for GET /shop
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop"
        return self.client.get(uri, None, headers, query_params, content_type)

    def shop_patch(self, data, headers=None, query_params=None, content_type="application/json"):
        """
        It is method for PATCH /shop
        """
        if query_params is None:
            query_params = {}

        uri = self.client.base_url + "/shop"
        return self.client.patch(uri, data, headers, query_params, content_type)
